
@{
    ViewData["Title"] = "Thêm tài khoản mới";
    ErrorView Error = ViewBag.Error;
}
@model WebAdmin.Models.User;

@if (Error != null && Error.HasError)
{
    <div class="alert alert-danger" role="alert">
        @Html.Raw(Error.Message)
    </div>
}
else
{
    <style>
        .avatar {
            height: 150px;
            width: 100%;
            text-align: center;
        }

            .avatar button {
                height: 100%;
                background: transparent;
                border: 0;
                cursor: pointer;
            }

            .avatar img {
                border-radius: 100%;
                height: 100%;
            }
    </style>
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="form-group avatar">
                    <button onclick="chooseImage()">
                        <img id="displayAvatar" src="@Model.RealAvatar()" alt="@Model.FullName()" />
                    </button>
                </div>
                <form class="forms-sample" method="post" action="/user/create">
                    <input type="hidden" id="Id" value="@Model.Id" name="Id" />
                    <input type="hidden" id="Avatar" value="@Model.Avatar" name="Avatar" />
                    <div class="form-group">
                        <label for="LastName">Họ</label>
                        <input type="text" class="form-control" id="LastName" placeholder="Họ người dùng" name="LastName" value="@Model.LastName">
                    </div>
                    <div class="form-group">
                        <label for="FirstName">Tên</label>
                        <input type="text" class="form-control" id="FirstName" name="FirstName" placeholder="Tên người dùng" value="@Model.FirstName">
                    </div>
                    <div class="form-group">
                        <label for="UserName">Tên tài khoản</label>
                        <input type="text" class="form-control" id="UserName" placeholder="Tên tài khoản người dùng" name="UserName" value="@Model.UserName">
                    </div>
                    <div class="form-group">
                        <label for="Email">Email</label>
                        <input type="email" class="form-control" id="Email" name="Email" placeholder="Email người dùng" value="@Model.Email">
                    </div>
                    <div class="form-group">
                        <label for="DisplayDOB">Ngày sinh</label>
                        <input type="date" class="form-control" id="DOB" name="DOB" placeholder="Ngày sinh người dùng" value="@Model.DOB">
                        @*<input type="text" class="form-control" id="DisplayDOB" name="DisplayDOB" disabled value="@(Model.DOB.Day + "/" + Model.DOB.Month + "/" + Model.DOB.Year)">*@
                    </div>
                    <div class="form-group">
                        <div class="form-check">
                            <label class="form-check-label">
                                @if (Model.IsAdmin)
                                {
                                    <input type="checkbox" class="form-check-input" id="DisplayIsAdmin" name="DisplayIsAdmin" checked onclick="onCheck(this)">
                                }
                                else
                                {
                                    <input type="checkbox" class="form-check-input" id="DisplayIsAdmin" name="DisplayIsAdmin" onclick="onCheck(this)">
                                }
                                Quản trị viên
                            </label>
                        </div>
                        <input type="hidden" id="IsAdmin" name="IsAdmin" value="@Model.IsAdmin" />
                    </div>
                    <button type="submit" class="btn btn-gradient-primary mr-2">Tạo</button>
                </form>
            </div>
        </div>
    </div>
    @section scripts {
        <script>
            function chooseImage() {
                var uploadButton = document.createElement("input");
                uploadButton.accept = "image/*";
                uploadButton.type = "file";
                uploadButton.click();
                uploadButton.onchange = function () {
                    if (uploadButton.files.length > 0) {
                        var file = uploadButton.files[0];
                        var formData = new FormData();
                        formData.append("File", file);
                        $.ajax("http://localhost:6000/api/file/upload", {
                            method: "POST",
                            data: formData,
                            headers: {
                                "Token": "Bearer " + window.accessToken
                            },
                            processData: false,
                            contentType: false
                        }).done(function (response) {
                            var avatar = response.result.url;
                            var displayAvatar = document.getElementById("displayAvatar");
                            displayAvatar.src = avatar;
                            var inputAvatar = document.getElementById("Avatar");
                            inputAvatar.value = avatar;
                        });
                    }
                }
            }
            function onCheck(event) {
                var isAdminInput = document.getElementById("IsAdmin");
                isAdminInput.value = event.checked;
            }
        </script>
    }
}
